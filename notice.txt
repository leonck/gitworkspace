添加
$ git add readme.txt
提交 增加在所有文件
$ git commit -m "wrote a readme file"
查看log
$ git log 
$ git log --pretty=oneline
回滚到上一个版本
$ git reset --hard HEAD^
回滚到指定版本
$ git reset --hard xx
查看命令历史，以便确定要回到未来的哪个版本。
$git reflog
git add命令实际上是把要提交在所有修改放到缓存区，然后执行git commit就可以一次性把暂存区的所有修改提交到分支。
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。
场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD <file>，就回到了场景1，第二步按场景1操作。
命令git rm用于删除一个文件。如果一个文件已经被提交到版本库，那么你永远不用担心误删，但是要小心，你只能恢复文件到最新版本，你会丢失最近一次提交后你修改的内容。

搭建一台运行Git的服务器

添加ssh到github项目设置
第1步：创建SSH Key。在用户主目录下，看看有没有.ssh目录，如果有，再看看这个目录下有没有id_rsa和id_rsa.pub这两个文件，如果已经有了，可直接跳到下一步。如果没有，打开Shell（Windows下打开Git Bash），创建SSH Key：
$ ssh-keygen -t rsa -C "youremail@example.com"
你需要把邮件地址换成你自己的邮件地址，然后一路回车，使用默认值即可
如果一切顺利的话，可以在用户主目录里找到.ssh目录，里面有id_rsa和id_rsa.pub两个文件，这两个就是SSH Key的秘钥对，id_rsa是私钥，不能泄露出去，id_rsa.pub是公钥，可以放心地告诉任何人。
第2步：登陆GitHub，打开“Account settings”，“SSH Keys”页面，然后，点“Add SSH Key”，填上任意Title，在Key文本框里粘贴id_rsa.pub文件的内容。

关联仓库
$ git remote add origin git@github.com:leonck/gitworkspace.git
提交库
$ git push -u origin master

远程克隆
$ git clone git@github.com:leonck/gitworkspace.git


git branch        -----查看当前分支

git pull             -----更新代码到本地  

git push   -----提交代码  

1、在本地修改相应文件（或者文件新旧替换）
2、git add **/**/文件名    （文件修改路径）（注意路径要写对）
3、git status         ----查看当前本地文件信息
4、 git commit -m "更改信息备注"
、git push               --------提交代码到当前分支（我一般git push 之前会看一下commit状态：git status）到此Git提交代码就完

创建dev分支，然后切换到dev分支：
$ git checkout -b dev  或者git switch -c dev
相当于
$ git branch dev
$ git checkout dev  //切换分支
Switched to branch 'dev'
git merge命令用于合并指定分支到当前分支，合并不保留历史
$ git merge dev
合并有历史
$ git merge --no-ff -m "merge with no-ff" dev
合并冲突时，解决冲突再提交就行
删除分支
$ git branch -d dev












